** organizations 시작 전!! 필수 읽어보길 바람!! **

------------------------------------------------------------------------------------------------------------

1. vsc로 작업시 vsc에 로그인이 되어있는지 확인함.

------------------------------------------------------------------------------------------------------------

2. 로그인이 안 되어 있다면 순서대로 작업
    2-1. GitHub 홈페이지에 미리 로그인 해놓기.

    2-2. 왼쪽 하단에 계정(Accounts) 라고 있음.

    2-3. 설정 동기화 (setting Sync is On)을 눌러 로그인 및 켜기 ㄱㄱ
    깃허브 홈페이지로 이동되면 연결

------------------------------------------------------------------------------------------------------------

3. Organizations 에서 Clone 땡기는 법
    3-1. organizations 에서 해당 레포지토리 http로 복사.

    3-2. 터미널을 열고 git clone <http>

------------------------------------------------------------------------------------------------------------

4. 각자 개인 브랜치 생성 후 작업에 돌입해야 함. (메인은 절대 건들면 안 됩니다.) //여기서 메인은 첫번째 시점이 됨(#1)
    4-1. 브랜치 확인 방법
        git branch  << 브랜치가 뭐뭐 있는지 확인 가능함
        git branch (브랜치 이름)  << 브랜치가 새로 생성됨
        git branch -b (브랜치 이름) << 해당 브랜치가 삭제됨
        git checkout (브랜치 이름)  << 브랜치 이동 방법 <<윈도우는 폴더경로 옆에 브랜치 이름이 뜸 맥은 안 뜸 ㅜ

    4-2. 개인 브랜치에서 작업 후 개인 브런치로 push (vsc에 로그인이 되어 있고, organizations에 팀원이며 owner일때 가능)
        git add .
        git commit -m "커밋 메세지"
        git push -u origin (만든 브랜치)

    4-3. 위 과정을 거치고 나면 개인 브런치가 최근이 됨 (메인은 과거가 됨)

------------------------------------------------------------------------------------------------------------

5. 개인이 작성한 브랜치에서 push가 완료된 뒤 개인 브랜치와 메인 병합하는 방법
    5-1. 만든 브랜치와 메인 병합을 하기 전, 하고난 후 무조건 팀원에게 알려줘야 병합오류 없이 원활하게 흘러갑니덩

    5-2. GitHub 에서 상단에 Pull requests가 생성됨. 안 보인다면 해당 레포지토리에 branch가 2 라고 
    되어있음(main, (만든 브랜치 이름))/ 거기서 작업 pull requests 버튼을 눌러 상세 메세지를 써줌.

    5-3. 정밀검사를 한 뒤 pull requests 하고 수정 메세지 작성 후 메인과 병합이 됨. 된 브랜치는 삭제.
    터미널로 들어오면 브랜치는 남아있지만 풀 푸쉬를 못함. 그래서 브랜치를 삭제 해주고 (git branch -d (만든 브랜치 이름))
    다시 브랜치를 하나 파서 거기서 작성 하면 됨.

------------------------------------------------------------------------------------------------------------

6. 병합이 완료된 메인 가지고 오기
    6-1. 모든 사람은 작업을 중단하고 메인 브랜치로 이동
        git checkout main << 메인 브랜치로 이동

    6-2. git status로 pull patch 내용을 확인 할 수 있음. 확인한 후 git pull 을 해주면 2번째 시점이 됨(#2)
    첫번째로 메인에 병합을 했던 작업 파일들을 받을 수 있음.

------------------------------------------------------------------------------------------------------------

7. 메인을 풀 받은 뒤 다시 작업
    7-1. 풀을 받고 나면 다시 기존 작업했던 브랜치로 이동 (git checkout (만든 브랜치 이름)) 브랜치 이동 됐는지 확인 후
    다시 작업 하고 메인과 병합하려고 한다면 5번과정으로 ㄱㄱ

